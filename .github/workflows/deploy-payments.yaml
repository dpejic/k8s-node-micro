name: deploy-payments

on:
  push:
    branches: [ "master" ]

env:
  SERVICE_NAME: payments
  DEPLOYMENT_NAME: payments-depl
  DEPL_FILE: payments-depl.yaml
  PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  GAR_LOCATION: us 
  GKE_CLUSTER: ticketing-dev
  GKE_ZONE: us-central1-c
  REPOSITORY: us.gcr.io/${{ secrets.GKE_PROJECT_ID }}

jobs:
  setup-build-publish-deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: 'auth'
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GKE_PROJECT_ID }}
          service_account_key: ${{ secrets.SA_CREDS }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      - name: Build
        run: |-
          cd $SERVICE_NAME
          docker build -f Dockerfile.prod \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      - name: Publish
        id: publish-image
        run: |-
          gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$GITHUB_SHA"
          echo "::set-output name=image::$REPOSITORY/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA"

      - name: Update yaml version
        run: |-
          wget -q https://github.com/mikefarah/yq/releases/download/v4.27.5/yq_linux_amd64
          sudo mv yq_linux_amd64 /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
          yq e -i '.spec.template.spec.containers[0].image |= "${{ steps.publish-image.outputs.image }}"' $SERVICE_NAME/infra/$DEPL_FILE

      - name: Deploy
        run: |-
          cd $SERVICE_NAME/infra
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID
          kubectl apply -f $DEPL_FILE
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide